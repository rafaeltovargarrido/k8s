apiVersion: v1
kind: Secret
metadata:
  name: prod-redis-secret
type: Opaque
data:
  redis-password: Y3Vyc28=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: react
  labels:
    app: react
spec:
  replicas: 1
  selector:
    matchLabels:
      app: react
  template:
    metadata:
      labels:
        app: react 
    spec: 
      volumes:
        - name: nginx-config-volume
          configMap:
            name: nginx-config             
      containers:
        - name: react           
          image: react:v3
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config-volume
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf 
---
apiVersion: v1
kind: Service
metadata:
  name: react
spec:
  type: ClusterIP
  selector:
    app: react
  ports:
  - port: 8080
    targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sprint
  labels:
    app: sprint
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sprint
  template:
    metadata:
      labels:
        app: sprint
    spec:          
      containers:
        - name: sprint           
          image: sprint:v2
          ports:
            - containerPort: 8181
              name: http-sprint
          resources:
            limits:
              memory: "64Mi"
              cpu: "100m"
            requests:
              memory: "64Mi"
              cpu: "100m"               
---
apiVersion: v1
kind: Service
metadata:
  name: sprint
spec:
  type: ClusterIP
  selector:
    app: sprint
  ports:
  - port: 80
    targetPort: http-sprint
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
    - host: react.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: react
                port:
                  number: 8080                
---
apiVersion: v1
data:
  key2: dasdas
  nginx.conf: |-
    server {
        listen 80;

        location / {
            root /usr/share/nginx/html;
            try_files $uri /index.html;
        }

        location /api {
            rewrite ^/api/(.*) /$1 break;
            proxy_pass http://sprint;  # Forward /api requests to backend
        }
    }
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: default
---                    