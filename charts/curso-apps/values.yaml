# Default values for react-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: react
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  name: http-react

resources: 
  limits:
    cpu: 100m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 256Mi

  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http-react
  initialDelaySeconds: 5
  periodSeconds: 15
readinessProbe:
  httpGet:
    path: /
    port: http-react
  initialDelaySeconds: 5
  periodSeconds: 15    

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: nginx-config-volume
    configMap:
      name: nginx-config   

# Additional volumeMounts on the output Deployment definition.
volumeMounts: 
  - name: nginx-config-volume
    mountPath: /etc/nginx/conf.d/default.conf
    subPath: nginx.config

nodeSelector: {}

tolerations: []

affinity: {}

backend:
  image:
    repository: sprint
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""  
  host: sprint
  port: 80
  port_sprint: 8181
  name_port: http-sprint
  labels:
    app: sprint

ingress:
  className: nginx
  host: react.local
  path: /
  pathType: Prefix    

redis:
  host: redis  

prometheus: http://prometheus.istio-system:9090

keda: 
  - type: cron
    metadata:
      # Required
      timezone: Europe/Madrid
      start: 0 6 * * 1-5        # At 6:00 AM
      end: 0 20 * * 1-5         # At 8:00 PM
      desiredReplicas: "2"

  - type: prometheus
    metadata:
      serverAddress: http://prometheus.istio-system:9090
      threshold: '2'
      query: sum(rate(istio_requests_total{destination_service_name="apps-curso-apps", response_code="200"}[1m]))                  

  - type: cpu
    metricType: Utilization # Allowed types are 'Utilization' or 'AverageValue'
    metadata:
      value: "75"       