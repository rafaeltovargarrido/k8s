apiVersion: apps/v1
kind: Deployment
metadata:
  name: react
  namespace: default
  labels:
    app: react
spec:
  replicas: 1
  selector:
    matchLabels:
      app: react
  template:
    metadata:
      labels:
        app: react 
    spec: 
      volumes:
        - name: nginx-config-volume
          configMap:
            name: nginx-config     
        - name: shared-storage
          persistentVolumeClaim:
            claimName: shared-pvc                    
      containers:
        - name: react           
          image: ghcr.io/rafaeltovargarrido/react:latest
          ports:
            - containerPort: 80
              name: http-react
          volumeMounts:
            - name: nginx-config-volume
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf 
            - mountPath: /images  # Path inside the container
              name: shared-storage                   
---
apiVersion: v1
kind: Service
metadata:
  name: react
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: react
  ports:
  - port: 8080
    targetPort: http-react
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sprint
  namespace: default
  labels:
    app: sprint
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sprint
  template:
    metadata:
      labels:
        app: sprint
    spec:          
      containers:
        - name: sprint           
          image: ghcr.io/rafaeltovargarrido/sprint:latest
          ports:
            - containerPort: 8181
              name: http-sprint           
---
apiVersion: v1
kind: Service
metadata:
  name: sprint
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: sprint
  ports:
  - port: 80
    targetPort: http-sprint
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  namespace: default
spec:
  ingressClassName: nginx
  rules:
    - host: react.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: react
                port:
                  number: 8080                
---
apiVersion: v1
data:
  nginx.conf: |-
    server {
        listen 80;

        location / {
            root /usr/share/nginx/html;
            try_files $uri /index.html;
        }

        location /api {
            rewrite ^/api/(.*) /$1 break;
            proxy_pass http://sprint;
        }
    }
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: default
---                  
apiVersion: v1
kind: PersistentVolume
metadata:
  name: shared-pv
spec:
  capacity:
    storage: 2Gi  # Size of the storage
  accessModes:
    - ReadWriteMany  # Allows multiple pods to read and write
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /mnt/data/shared-files  # Directory on Minikube's host machine
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shared-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: python-cronjob
spec:
  schedule: "*/5 * * * *"  # This runs every 5 minutes. Adjust as needed.
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: python-cron
            image: python:3.9-slim  # Python 3 base image
            command: ["python3", "-c", "print('Hello from Cron!')"]  # Replace with your command
          restartPolicy: OnFailure
